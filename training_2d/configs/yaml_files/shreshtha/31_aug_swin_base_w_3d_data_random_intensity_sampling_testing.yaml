defaults:
  # - cls: cls_tb
  # - seg: seg_tb
  # - files: e2e
  # - model/optimizer: adam
  # - model/scheduler: one_cycle_lr
  - override hydra/hydra_logging: disabled #prevent logging
  - override hydra/job_logging: disabled #prevent logging
  - _self_

#prevent logging
hydra:
  output_subdir: null
  run:
    dir: .

path:
  checkpoint_dir: "/raid/qxr_ln_trainings/checkpoints"
  checkpoint_path: ""
  log_directory: "/raid/qxr_ln_trainings/logs"

cls: 
  sampling_tags: ['nodule', 'regular_border', 'irregular_border', 'homogenous', 'inhomogenous','calcified' , 'artifact', 'normal', 'nota'] 
  heads: ['nodule', 'regular_border', 'irregular_border', 'homogenous', 'inhomogenous','calcified' ,'artifact',  'normal']
  user_class_wts: {'nodule': 2.538413274948877 , 'regular_border': 2.9738119758850208, 'irregular_border': 5.424334043312701, 'homogenous': 3.7202120148085625, 'inhomogenous': 4.350398996479682, 'calcified': 5.671707787850959, 'artifact': 6.22066195198914,'normal': 1.0, 'nota': 1.0867665573752265}
  loss_wts : {'nodule': 2.891839576025378, 'regular_border': 3.3878593562272283, 'irregular_border': 6.1795705272134045, 'homogenous': 4.23818156079613, 'inhomogenous': 4.956110225848023, 'calcified': 6.4613864125693246, 'artifact': 6.405788573422099,'normal': 1.0}
  # sampling_tags: ['nodule', 'regular_border', 'irregular_border', 'homogenous', 'inhomogenous', 'artifact', 'normal', 'nota'] 
  # heads: ['nodule', 'regular_border', 'irregular_border', 'homogenous', 'inhomogenous','artifact',  'normal']
  # user_class_wts: {'nodule': 2.538413274948877 , 'regular_border': 2.9738119758850208, 'irregular_border': 5.424334043312701, 'homogenous': 3.7202120148085625, 'inhomogenous': 4.350398996479682,  'artifact': 6.22066195198914,'normal': 1.0, 'nota': 1.0867665573752265, }
  # loss_wts : {'nodule': 2.891839576025378, 'regular_border': 3.3878593562272283, 'irregular_border': 6.1795705272134045, 'homogenous': 4.23818156079613, 'inhomogenous': 4.956110225848023,  'artifact': 6.405788573422099,'normal': 1.0}
  alpha: 2

seg:
  sampling_tags: ['nodule'] 
  heads: ['nodule']
  dice_threshold: [0.35] 
  user_class_wts: {'nodule': 1.0, 'regular_border': 1.372468392454241,'irregular_border': 4.566339448318749, 'homogenous': 2.147883498391208,  'inhomogenous': 2.9372,  'calcified': 4.992327117327117}
  loss_wts:  {'nodule': 1.0, 'regular_border': 1.171523961534406, 'irregular_border': 2.1368994941644623, 'homogenous': 1.4655659310884737,'inhomogenous': 1.7138261288545729,'calcified': 2.234351610005292}
  # sampling_tags: ['nodule', 'regular_border', 'irregular_border', 'homogenous', 'inhomogenous' ]
  # heads: ['nodule', 'regular_border', 'irregular_border', 'homogenous', 'inhomogenous' ]
  # dice_threshold: [0.35, 0.35, 0.35, 0.35, 0.35] 
  # user_class_wts: {'nodule': 1.0, 'regular_border': 1.372468392454241,'irregular_border': 4.566339448318749, 'homogenous': 2.147883498391208,  'inhomogenous': 2.9372}
  # loss_wts:  {'nodule': 1.0, 'regular_border': 1.171523961534406, 'irregular_border': 2.1368994941644623, 'homogenous': 1.4655659310884737,'inhomogenous': 1.7138261288545729}
  alpha: 5

files:   
  testing_csv: '/raid/qxr_ln_trainings/testing/nlst_jsrt.csv'
  testing_images:  ['/raid/cxr/qxr_ln_data/jsrt_nlst/data']
  testing_annotation_path: ['/raid/cxr/qxr_ln_data/jsrt_nlst/masks']  ##giving a dummy path for now to avoid error
  # testing_csv: '/fast_data_e2e_1/cxr/qxr_ln_data/LN_test/combined_test_csv_updated_internal_test_13-08-24.csv'
  # testing_images:  ['/fast_data_e2e_1/cxr/qxr_ln_data/padchest/pngs/pngs_1440/', '/fast_data_e2e_1/cxr/qxr_ln_data/segmed/segmed_pngs/', '/fast_data_e2e_1/cxr/qxr_ln_data/sbri/pngs/', '/fast_data_e2e_1/cxr/qxr_ln_data/vrad_imgs/' , '/fast_data_e2e_1/cxr/qxr_ln_data/jsrt_nlst/data/', '/fast_data_e2e_1/cxr/qxr_ln_data/mgh/all_pngs/' , '/fast_data_e2e_1/cxr/qxr_ln_data/fda_data/nodule_fda/', '/models_common_e2e/cxr_data/testing/images/']
  # testing_annotation_path: ['/models_common_e2e/cxr_data/testing/test_annotations']  ## doing seg analysis only on internal test - have to generate for bot h fda/nlstjsrt

model:
  __target__: cxr_training.nnmodule.nnmodule_controller.LitModel
  encoder_library: timm
  encoder: swinv2_base_window8_256
  decoder: unetplusplus
  in_channels: 1
  out_channels: 2
  scheduler:
    _target_: torch.optim.lr_scheduler.OneCycleLR
    params:
      pct_start: 0.3
      max_lr: 0.0005
      anneal_strategy: 'cos'
      div_factor: 250 #self.max_lr / self.optimizer_lr
      final_div_factor: 100 # self.optimizer_lr / self.final_lr
      base_momentum: 0.90 # momentum changes beta[0] value in adamw
      max_momentum: 0.95
      three_phase: False
  optimizer:
    _target_: torch.optim.AdamW
    params:
      lr: 0.0005
      betas: [0.9, 0.99]
      eps: 1e-08
      weight_decay: 0.1

trainer:
    description: "base_training"
    project: "qxr_ln_training"
    model_file: "31_aug_swin_base_w_3d_data_random_intensity_sampling"
    batch_size: 32
    num_workers: 4
    gpus: [-1]
    recipe: "testing"
    recipe_module: cxr_training.recipes.test_recipe.TestRecipe
    checkpoint_dir: "/fast_data_e2e11/qxr_ln_trainings/checkpoints"
    model_list: []

params:
    im_size: 1024
    f1_beta_value:
    inference_on_subset: False
    inference_on_images: False
    inference_type: "cls_seg"
    metric_type: "cls_seg"
    inference_run: True
    metric_run: True

use_clearml: False
validate_config: False











