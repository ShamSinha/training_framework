# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_anchors.ipynb.

# %% auto 0
__all__ = ['AnchorGeneratorBasedonStride']

# %% ../nbs/02_anchors.ipynb 1
import torch
import torch.nn as nn
from typing import List
from monai.apps.detection.utils.anchor_utils import AnchorGenerator
from monai.utils import look_up_option

# %% ../nbs/02_anchors.ipynb 3
class AnchorGeneratorBasedonStride(AnchorGenerator):
    __annotations__ = {"cell_anchors": List[torch.Tensor]}

    def __init__(
        self,
        strides: List[int],
        spatial_dims: int = 3,
        indexing: str = "ij",
    ):
        nn.Module.__init__(self)
        self.strides = strides
        self.spatial_dims = look_up_option(spatial_dims, [2, 3])
        self.indexing = look_up_option(indexing, ["ij", "xy"])
        self.cell_anchors = [torch.Tensor([0.0] * len(stride) + stride).reshape(1, -1) for stride in strides]
